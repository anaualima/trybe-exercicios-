{"ast":null,"code":"var _jsxFileName = \"/home/anaualima/trybe-exercicios-/front-end/bloco-12-ciclo-de-vida-de-componentes-e-react-rounter/dia-1-ciclo-de-vida-de-componentes/trybestars/src/components/Timer.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Timer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      seconds: 1\n    };\n    setInterval(() => {\n      this.setState(prevState => ({\n        seconds: prevState.seconds + 1\n      }));\n    }, 1000);\n  }\n\n  render() {\n    const {\n      seconds\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/anaualima/trybe-exercicios-/front-end/bloco-12-ciclo-de-vida-de-componentes-e-react-rounter/dia-1-ciclo-de-vida-de-componentes/trybestars/src/components/Timer.js"],"names":["React","Component","Timer","constructor","state","seconds","setInterval","setState","prevState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AACzCE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAIAC,IAAAA,WAAW,CAAC,MAAM;AACd,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC1BH,QAAAA,OAAO,EAAEG,SAAS,CAACH,OAAV,GAAkB;AADD,OAAhB,CAAd;AAGH,KAJU,EAIR,IAJQ,CAAX;AAKH;;AACDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEJ,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACI;AAAA,6BACI;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AApBwC","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Timer extends Component {\n    constructor (){\n        super()\n        this.state = {\n          seconds: 1,\n        }\n\n        setInterval(() => {\n            this.setState((prevState) => ({\n                seconds: prevState.seconds+1,\n            }))\n        }, 1000)\n    }\n    render() {\n        const { seconds } = this.state\n        return (\n            <section>\n                <h2>{seconds}</h2>\n            </section>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}