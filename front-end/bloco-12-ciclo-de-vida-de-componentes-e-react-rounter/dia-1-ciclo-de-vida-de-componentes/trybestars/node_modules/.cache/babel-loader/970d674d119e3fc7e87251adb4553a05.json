{"ast":null,"code":"var _jsxFileName = \"/home/anaualima/trybe-exercicios-/front-end/bloco-12-ciclo-de-vida-de-componentes-e-react-rounter/dia-1-ciclo-de-vida-de-componentes/trybestars/src/components/Timer.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Timer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      seconds: 1,\n      phases: ['INSPIRE...', 'SEGURE...', 'EXPIRE...'],\n      currentPhase: 0\n    };\n  }\n\n  componentDidMount() {\n    const timeLimit = 1000;\n    this.intervalId = setInterval(() => {\n      this.setState(prevState => ({\n        seconds: prevState.seconds + 1\n      }));\n    }, timeLimit);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.seconds === 5) {\n      this.setState({\n        seconds: 1,\n        currentPhase: prevState.currentPhase === 2 ? 0 : prevState.currentPhase + 1\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    // DESMONTA O COMPONENTE;\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    const {\n      seconds,\n      phases,\n      currentPhase\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: phases[currentPhase]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/anaualima/trybe-exercicios-/front-end/bloco-12-ciclo-de-vida-de-componentes-e-react-rounter/dia-1-ciclo-de-vida-de-componentes/trybestars/src/components/Timer.js"],"names":["React","Component","Timer","constructor","state","seconds","phases","currentPhase","componentDidMount","timeLimit","intervalId","setInterval","setState","prevState","componentDidUpdate","prevProps","componentWillUnmount","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AACzCE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CADE;AAEXC,MAAAA,MAAM,EAAE,CAAC,YAAD,EAAe,WAAf,EAA4B,WAA5B,CAFG;AAGXC,MAAAA,YAAY,EAAE;AAHH,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,SAAS,GAAG,IAAlB;AACA,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAChC,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC1BR,QAAAA,OAAO,EAAEQ,SAAS,CAACR,OAAV,GAAkB;AADD,OAAhB,CAAd;AAGH,KAJ4B,EAI1BI,SAJ0B,CAA7B;AAKH;;AAEDK,EAAAA,kBAAkB,CAACC,SAAD,EAAYF,SAAZ,EAAuB;AACrC,QAAGA,SAAS,CAACR,OAAV,KAAsB,CAAzB,EAA2B;AACvB,WAAKO,QAAL,CAAc;AACVP,QAAAA,OAAO,EAAE,CADC;AAEVE,QAAAA,YAAY,EAAEM,SAAS,CAACN,YAAV,KAA2B,CAA3B,GAA8B,CAA9B,GAAkCM,SAAS,CAACN,YAAV,GAAuB;AAF7D,OAAd;AAIH;AACJ;;AAEDS,EAAAA,oBAAoB,GAAG;AAAG;AACtBC,IAAAA,aAAa,CAAC,KAAKP,UAAN,CAAb;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEb,MAAAA,OAAF;AAAWC,MAAAA,MAAX;AAAmBC,MAAAA;AAAnB,QAAoC,KAAKH,KAA/C;AACA,wBACI;AAAA,8BACI;AAAA,kBAAKE,MAAM,CAACC,YAAD;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAxCwC","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Timer extends Component {\n    constructor (){\n        super()\n        this.state = {\n          seconds: 1,\n          phases: ['INSPIRE...', 'SEGURE...', 'EXPIRE...'],\n          currentPhase: 0,\n        }\n    }\n\n    componentDidMount() {\n        const timeLimit = 1000;\n        this.intervalId = setInterval(() => {\n            this.setState((prevState) => ({\n                seconds: prevState.seconds+1,\n            }))\n        }, timeLimit)\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevState.seconds === 5){\n            this.setState({\n                seconds: 1,\n                currentPhase: prevState.currentPhase === 2? 0 : prevState.currentPhase+1,\n            })\n        }\n    }\n\n    componentWillUnmount() {  // DESMONTA O COMPONENTE;\n        clearInterval(this.intervalId); \n    }\n\n    render() {\n        const { seconds, phases, currentPhase } = this.state\n        return (\n            <section>\n                <h1>{phases[currentPhase]}</h1>\n                <h2>{seconds}</h2>\n            </section>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}